{
  "version": 3,
  "sources": ["<stdin>", "../../../../node_modules/@remix-run/dev/dist/compiler/shims/react.ts", "../../app/entry.server.tsx", "../../app/root.tsx", "../../app/routes/posts/$.tsx", "../../app/utils/mdx.server.ts", "../../app/routes/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import { PassThrough } from \"stream\";\nimport { renderToPipeableStream } from \"react-dom/server\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { Response } from \"@remix-run/node\";\nimport type { EntryContext, Headers } from \"@remix-run/node\";\nimport isbot from \"isbot\";\n\nconst ABORT_DELAY = 5000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const callbackName = isbot(request.headers.get(\"user-agent\"))\n    ? \"onAllReady\"\n    : \"onShellReady\";\n\n  return new Promise((resolve, reject) => {\n    let didError = false;\n\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer context={remixContext} url={request.url} />,\n      {\n        [callbackName]() {\n          let body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              status: didError ? 500 : responseStatusCode,\n              headers: responseHeaders,\n            })\n          );\n          pipe(body);\n        },\n        onShellError(err: unknown) {\n          reject(err);\n        },\n        onError(error: unknown) {\n          didError = true;\n          console.error(error);\n        },\n      }\n    );\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import codeHikeStyles from \"@code-hike/mdx/dist/index.css\";\nimport type { MetaFunction, LinksFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"hojong blog\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport const links: LinksFunction = () => [\n  { rel: \"stylesheet\", href: codeHikeStyles },\n];\n\nexport default function App() {\n  return (\n    <html lang=\"kr\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import theme from \"shiki/themes/monokai.json\";\nimport { remarkCodeHike } from \"@code-hike/mdx\";\nimport { LoaderFunction } from \"@remix-run/node\";\nimport { Link, useLoaderData } from \"@remix-run/react\";\nimport fs from \"fs\";\nimport { useMemo } from \"react\";\nimport { getMDXComponent } from \"mdx-bundler/client\";\nimport path from \"path\";\nimport { json } from \"@remix-run/node\";\nimport { bundleMDX } from \"~/utils/mdx.server\";\n\ntype LoaderData = {\n  frontmatter: any;\n  code: string;\n};\n\nexport const loader: LoaderFunction = async ({ params, request }) => {\n  const slug = params[\"*\"];\n  if (!slug) throw new Response(\"Not found\", { status: 404 });\n\n  const post = await getPost(slug);\n\n  if (post) {\n    return json(post);\n  }\n\n  throw new Response(\"Not found\", { status: 404 });\n};\n\nasync function getPost(slug: string) {\n  const source = await fs.promises.readFile(\n    path.join(`${__dirname}/../../posts`, slug + \".mdx\"),\n    \"utf-8\"\n  );\n\n  const post = await bundleMDX({\n    source,\n    mdxOptions(options, frontmatter) {\n      // this is the recommended way to add custom remark/rehype plugins:\n      // The syntax might look weird, but it protects you in case we add/remove\n      // plugins in the future.\n      options.remarkPlugins = [\n        ...(options.remarkPlugins ?? []),\n        [remarkCodeHike, { theme }],\n      ];\n      //   options.rehypePlugins = [\n      //     ...(options.rehypePlugins ?? []),\n      //     myRehypePlugin,\n      //   ];\n\n      return options;\n    },\n  });\n\n  return post;\n}\n\nexport default function Post() {\n  const { code, frontmatter } = useLoaderData<LoaderData>();\n  const Component = useMemo(() => getMDXComponent(code), [code]);\n\n  return (\n    <>\n      <header>\n        <h1>{frontmatter.title}</h1>\n        <p>{frontmatter.description}</p>\n      </header>\n      <main>\n        <Component />\n      </main>\n    </>\n  );\n}\n", "export { bundleMDX } from \"mdx-bundler\";\n", "import { LoaderFunction, json } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport parseFrontMatter from \"front-matter\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { Post } from \"~/types\";\nimport { Link } from \"@remix-run/react\";\n\ntype LoaderData = {\n  posts: Post[];\n};\n\nexport async function getPosts() {\n  const postsPath = await fs.promises.readdir(`${__dirname}/../../posts`, {\n    withFileTypes: true,\n  });\n\n  const posts = await Promise.all(\n    postsPath.map(async (dirent) => {\n      const file = await fs.promises.readFile(\n        path.join(`${__dirname}/../../posts`, dirent.name)\n      );\n\n      const { attributes } = parseFrontMatter<{\n        title: string;\n        description: string;\n        date: string;\n      }>(file.toString());\n\n      return {\n        slug: dirent.name.replace(/\\.mdx/, \"\"),\n        title: attributes.title,\n      };\n    })\n  );\n\n  return json({ posts });\n}\n\nexport const loader: LoaderFunction = async () => {\n  return getPosts();\n};\n\nexport default function Index() {\n  const { posts } = useLoaderData<LoaderData>();\n\n  return (\n    <div>\n      {posts.map((post, idx) => {\n        return (\n          <div key={idx}>\n            <Link to={`/posts/${post.slug}`}>{post.title}</Link>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n", "export default {'version':'4201066e','entry':{'module':'/build/entry.client-V3RCM22G.js','imports':['/build/_shared/chunk-5BZWRA72.js','/build/_shared/chunk-CHECYWC4.js','/build/_shared/chunk-25LKBTXO.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-37NN2IER.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-DNTCQLXP.js','imports':['/build/_shared/chunk-OGEZ545I.js','/build/_shared/chunk-YZXM5PPS.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/posts/$':{'id':'routes/posts/$','parentId':'root','path':'posts/*','index':undefined,'caseSensitive':undefined,'module':'/build/routes/posts/$-O47GZTAG.js','imports':['/build/_shared/chunk-OGEZ545I.js','/build/_shared/chunk-YZXM5PPS.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-4201066E.js'};", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/posts/$.tsx\";\nimport * as route2 from \"./routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/posts/$\": {\n      id: \"routes/posts/$\",\n      parentId: \"root\",\n      path: \"posts/*\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    }\n  };"],
  "mappings": "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",
  "names": []
}
